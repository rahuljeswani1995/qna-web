{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/main-page/main-page.component.ts","./src/app/main-page/main-page.component.html","./src/app/resolvers/test-data.resolver.ts","./src/app/services/data.service.ts","./src/app/services/user-profile.service.ts","./src/app/test/test.component.ts","./src/app/test/test.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/main.ts","./src/models/answer.model.ts","./src/models/question.model.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { AppComponent } from './app.component';\nimport { TestComponent } from './test/test.component';\nimport { TestDataResolver } from './resolvers/test-data.resolver';\nimport { MainPageComponent } from './main-page/main-page.component';\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: AppComponent\n  },\n  {\n    path: \"login\",\n    component: WelcomeComponent\n  },\n  {\n    path: \"main\",\n    component: MainPageComponent\n  },\n  {\n    path: \"test\",\n    component: TestComponent,\n    resolve: {serverData: TestDataResolver }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n  })\n  export class AppComponent implements OnInit {\n    constructor(private router: Router){}\n\n    ngOnInit(){\n        this.router.navigate([\"/login\"]);\n    }\n\n  }\n  ","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { AppComponent } from './app.component';\nimport { TestComponent } from './test/test.component';\nimport { MainPageComponent } from './main-page/main-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    TestComponent,\n    MainPageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserProfileService } from '../services/user-profile.service';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.css']\n})\nexport class MainPageComponent implements OnInit {\n  tests = [];\n  \n  constructor(private router: Router,\n    private userSvc: UserProfileService) { }\n\n  ngOnInit(): void {\n    this.populateTests();\n  }\n\n\n  // retrieve previous tests' data from the local storage\n  populateTests() {\n    this.tests = JSON.parse(localStorage.getItem(this.userSvc.getUserEmail()));\n\n  }\n\n  startNewTest(){\n    this.router.navigate([\"/test\"]);\n  }\n\n}\n","<div class=\"container\">\n    <h3>Home</h3>\n    <div id=test-history>\n        <h4>My Test History</h4>\n        <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"tests == null || tests == undefined || tests.length == 0\">\n            No records!\n        </div>\n\n        <div id=\"history-table\"class=\"table-responsive\" *ngIf=\"tests.length != 0\">\n            <table class=\"table text-black table-striped\">\n                <thead>\n                    <tr style=\"background-color: #518ba7;\">\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Date</th>\n                        <th scope=\"col\">Correct Answers</th>\n                        <th scope=\"col\">Total Questions</th>\n                        <th scope=\"col\">Percentage Score</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let test of tests; index as i\">\n                        <td>{{i+1}}</td>\n                        <td>{{test.date}}</td>\n                        <td>\n                            {{test.numCorrect}}\n                        </td>\n                        <td>{{test.totalQns}}</td>\n                        <td>{{test.percent}}%</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div id=\"new-test-button-div\">\n        <button id=\"btnNewTest\" class=\"btn btn-success btn-lg\" (click)=\"startNewTest()\" >Start New Test</button>\n    </div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { DataService } from '../services/data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TestDataResolver implements Resolve<any>{\n    constructor(private dataService: DataService){\n        \n    }\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.dataService.getData();\n        \n\n        \n    }\n    \n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n  getData(): Observable<any>{\n      // return this.http.get(\"http://lsatmaxadmin.us/interview/loadData.php\");\n      return this.http.get(\"http://cors-anywhere.herokuapp.com/lsatmaxadmin.us/interview/loadData.php\");\n  }\n}","import { Injectable } from \"@angular/core\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class UserProfileService{\n    private userName: string;\n    private email: string;\n\n    public getUserName(): string{\n        return this.userName;\n    }\n\n    public setUserName(v:string){\n        this.userName = v;\n    }\n\n    public getUserEmail(): string{\n        return this.email;\n    }\n\n    public setUserEmail(v:string){\n        this.email = v;\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Question } from '../../models/question.model';\nimport { Answer } from 'src/models/answer.model';\nimport { UserProfileService } from '../services/user-profile.service';\n\n@Component({\n    selector: 'app-test',\n    templateUrl: './test.component.html',\n    styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n    serverData: any;\n    questionsModel: Question[];\n    questionsToDisplay: Question[];\n    sections: Set<string>;\n\n    currentQuestion: Question;\n    questionParaEl: any;\n\n    constructor(private route: ActivatedRoute,\n        private router: Router,\n        private userSvc: UserProfileService) { }\n\n    ngOnInit() {\n        this.questionParaEl = document.getElementById(\"question-para\");\n\n        this.route.data.subscribe(res => {\n            this.serverData = res.serverData;\n        });\n        this.questionsModel = this.transformIntoModel(this.serverData);\n\n        this.questionsToDisplay = this.questionsModel;\n\n        this.sections = this.filterOutSections(this.questionsModel);\n\n        this.currentQuestion = this.questionsToDisplay[0];\n\n    }\n\n    private transformIntoModel(rawData: any[]): Question[] {\n        const questions: Question[] = [];\n\n        rawData.forEach((rawQn: any, idx: number) => {\n            let qn: Question = new Question();\n            qn.serialNum = (idx+1).toString();\n            qn.id = rawQn.id;\n            qn.answer_id = rawQn.correct_answer_id;\n            qn.category = rawQn.category;\n            qn.text = rawQn.question_text;\n\n            let ans_options: Answer[] = [];\n            rawQn.answers.forEach((rawAns: any) => {\n                let answer: Answer = new Answer();\n                answer.id = rawAns.id;\n                answer.text = rawAns.answer_text;\n                answer.chosen_percentage = rawAns.chosen_percentage;\n                ans_options.push(answer);\n            });\n\n            qn.options = ans_options;\n\n            questions.push(qn);\n        });\n        return questions;\n    }\n\n    private filterOutSections(questions: Question[]) {\n        return new Set(questions.map(x => x.category));\n    }\n\n    onSectionFilter(section: string) {\n        if (section == \"all\")\n            this.questionsToDisplay = this.questionsModel;\n        else\n            this.questionsToDisplay = this.questionsModel.filter(qn => qn.category == section);\n\n        this.currentQuestion = this.questionsToDisplay[0];\n    }\n\n    onQuestionSelect(questionId: string) {\n        this.currentQuestion = this.questionsToDisplay.find(q => q.id === questionId);\n    }\n\n    onAnswerSelect(ansId: string) {\n        this.currentQuestion.userSelection = ansId;\n    }\n\n    onSubmit() {\n        let numAttempted: number = this.questionsModel.filter(el => el.userSelection != null && el.userSelection != undefined).length;\n        if (window.confirm(`You have attempted ${numAttempted} out of ${this.questionsModel.length} questions. Are you sure you want to submit?`)) {\n            // submit\n            // save score\n            this.saveTestScore();\n            this.router.navigateByUrl(\"/main\");\n            // route to home page\n        }\n    }\n\n    private saveTestScore() {\n        let totalQuestions: number = this.questionsModel.length;\n        let numCorrect: number = this.questionsModel.filter(el => el.userSelection !== null && el.userSelection === el.answer_id).length;\n        let percentScore: number = numCorrect / totalQuestions * 100;\n        let email:string = this.userSvc.getUserEmail();\n        let tests: any[] = JSON.parse(localStorage.getItem(email));\n        let date: Date = new Date();\n        tests.push({\n            \"date\": `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`,\n            \"totalQns\": totalQuestions,\n            \"numCorrect\": numCorrect,\n            \"percent\": percentScore.toFixed(2)\n        });\n\n        localStorage.setItem(email, JSON.stringify(tests));\n\n    }\n\n}\n","<div id=\"test-container\" class=\"container\">\n    <div id=\"content-div\">\n        <div id=\"dropdown-container\">\n            <!-- Dropdown for sections -->\n            <h4 style=\"display: inline-block; margin-right: 1em\">Category: </h4>\n            <select (change)=\"onSectionFilter($event.target.value)\">\n                <option selected value=\"all\">All</option>\n                <option *ngFor=\"let section of sections\" [value]=\"section\">{{section}}</option>\n            </select>\n        </div>\n\n        <div id=\"questions-container\" class=\"float-left col-lg-2 col-md-2\">\n            <div class=\"qDiv\"\n                [ngClass]=\"{'attempted-qn': question.userSelection != null, 'selected-qn' : currentQuestion.id == question.id }\"\n                (click)=\"onQuestionSelect(question.id)\" *ngFor=\"let question of questionsToDisplay\">\n                <label class=\"qLabel\">\n                    Q.{{question.serialNum}}\n                </label>\n            </div>\n        </div>\n\n        <!-- question detail -->\n        <div id=\"question-detail\" class=\"float-left col-lg-10 col-md-10\">\n            <h3>Q.{{currentQuestion.serialNum}}</h3>\n            <p id=\"question-para\" [innerHTML]=\"currentQuestion.text\"></p>\n\n            <div *ngFor=\"let option of currentQuestion.options\" class=\"form-check\">\n                <label class=\"form-check-label\">\n                    <input type=\"radio\" class=\"form-check-input\" name=\"optradio\" [value]=\"option.id\"\n                        [checked]=\"currentQuestion.userSelection===option.id\"\n                        (change)=\"onAnswerSelect($event.target.value)\">{{option.text}}\n                </label>\n            </div>\n        </div>\n\n        <div class=\"clear-left\"></div>\n    </div>\n    <div id=\"footer-div\">\n        <!-- Next and previous buttons -->\n        <button id=\"btnSubmit\" class=\"btn btn-success btn-lg\" (click)=\"onSubmit()\">Submit Test</button>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { UserProfileService } from \"../services/user-profile.service\";\n\n@Component({\n\tselector: 'app-welcome',\n\ttemplateUrl: './welcome.component.html',\n\tstyleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n\tconstructor(private userSvc: UserProfileService,\n\t\tprivate router: Router) { }\n\n\n\tname: string;\n\temail: string;\n\tisNameValid: boolean;\n\tisEmailValid: boolean;\n\n\tngOnInit(): void {\n\t\tthis.name = this.email = \"\";\n\t\tthis.isNameValid = this.isEmailValid = false;\n\t}\n\n\tonLoginClick() {\n\t\tif (this.isNameValid && this.isEmailValid) {\n\t\t\tthis.userSvc.setUserName(this.name);\n\t\t\tthis.userSvc.setUserEmail(this.email);\n\n\t\t\tif (localStorage.getItem(this.email) == null) {\n\t\t\t\tlocalStorage.setItem(this.email, JSON.stringify([]));\n\t\t\t}\n\n\t\t\tthis.router.navigate(['/main']);\n\t\t}\n\t\telse {\n\t\t\talert(\"Please enter your name and e-mail address.\");\n\t\t}\n\n\t}\n\n\tonNameCommit(value: string) {\n\t\tif (value != null && value != \"\") {\n\t\t\tthis.name = value;\n\t\t\tthis.isNameValid = true;\n\t\t}\n\t\telse {\n\t\t\tthis.name == \"\";\n\t\t\tthis.isNameValid = false;\n\t\t}\n\n\n\t}\n\n\tonEmailCommit(value: string) {\n\t\tif (value != null && value != \"\") {\n\t\t\tthis.email = value;\n\t\t\tthis.isEmailValid = true;\n\t\t}\n\t\telse {\n\t\t\tthis.email == \"\";\n\t\t\tthis.isEmailValid = false;\n\t\t}\n\t}\n}\n","<div class=\"container\">\n    <div class=\"col-lg-8 col-md-8 mx-auto\">\n        <div class=\"card rounded shadow\">\n            <div class=\"card-header\">\n                <h3 class=\"mb-0\">Login</h3>\n            </div>\n            <div class=\"card-body\">\n                <div class=\"form-group\">\n                    <label>Name</label>\n                    <input type=\"text\" [value]=\"name\" placeholder=\"Enter Name\"\n                        (blur)=\"onNameCommit($event.target.value)\" class=\"form-control form-control-lg\" id=\"uname\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Email Address</label>\n                    <input type=\"text\" placeholder=\"Enter Email\" (blur)=\"onEmailCommit($event.target.value)\"\n                        class=\"form-control form-control-lg\" id=\"email\" [value]=\"email\">\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-success btn-lg float-right\" (click)=\"onLoginClick()\" id=\"btnLogin\">Login</button>\n            </div>\n        </div>\n    </div>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export class Answer {\n    id: string;\n    chosen_percentage: string;\n    text: string;\n\n}","import { Answer } from './answer.model';\n\nexport class Question {\n    serialNum: string;\n    id: string;\n    answer_id: string;\n    category: string;\n    text: string;\n    options: Answer[];\n    userSelection: string;\n}"],"sourceRoot":"webpack:///"}